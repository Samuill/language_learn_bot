# -*- coding: utf-8 -*-
import os
import json
import telebot
import pandas as pd
from datetime import datetime
from config import bot, user_state, ADMIN_ID

def clear_state(chat_id, preserve_dict_type=False):
    """Clear user state and delete message if exists
    
    Args:
        chat_id: User's chat ID
        preserve_dict_type: If True, preserve the dict_type setting for this user
    """
    if chat_id in user_state:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–∏–ø —Å–ª–æ–≤–Ω–∏–∫–∞, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ 
        dict_type = None
        if preserve_dict_type and "dict_type" in user_state[chat_id]:
            dict_type = user_state[chat_id]["dict_type"]
            
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ —î
        if "message_id" in user_state[chat_id]:
            try:
                bot.delete_message(chat_id, user_state[chat_id]["message_id"])
            except:
                pass
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ user_state
        del user_state[chat_id]
        
        # –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Ç–∏–ø —Å–ª–æ–≤–Ω–∏–∫–∞, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if preserve_dict_type and dict_type:
            user_state[chat_id] = {"dict_type": dict_type}
            print(f"Debug: Preserved dictionary type '{dict_type}' for user {chat_id}")

def get_user_params_path(chat_id):
    """Get path to user parameters file"""
    return f"params_{chat_id}.json"

def update_streak(chat_id):
    """Update user streak and return current streak count"""
    params_path = get_user_params_path(chat_id)
    
    try:
        with open(params_path, 'r') as f:
            params = json.load(f)
    except FileNotFoundError:
        params = {'streak': 0, 'last_active': None}
        
    today = datetime.now().date().isoformat()
    last_active = datetime.fromisoformat(params['last_active']).date() if params['last_active'] else None
    
    if last_active:
        delta = (datetime.now().date() - last_active).days
        if delta == 1:
            params['streak'] += 1
        elif delta > 1:
            params['streak'] = 1
    else:
        params['streak'] = 1
        
    params['last_active'] = today
    with open(params_path, 'w') as f:
        json.dump(params, f)    
        return params['streak']

def track_activity(chat_id):
    """Track user activity and update streak"""
    params_path = get_user_params_path(chat_id)
    
    # Create file if not exists
    if not os.path.exists(params_path):
        update_streak(chat_id)
        
    return update_streak(chat_id)

def main_menu_keyboard(chat_id=None):
    """Create main menu keyboard with dictionary selection"""
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ, —è–∫–∏–π —Å–ª–æ–≤–Ω–∏–∫ –∞–∫—Ç–∏–≤–Ω–∏–π
    dict_type = user_state.get(chat_id, {}).get("dict_type", "personal")
    
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–î–æ–¥–∞—Ç–∏ —Å–ª–æ–≤–æ" —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫ 
    # –∞–±–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∑–∞–≥–∞–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
    if dict_type == "personal" or chat_id == ADMIN_ID:
        keyboard.add("‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ —Å–ª–æ–≤–æ", "üìñ –í—á–∏—Ç–∏ –Ω–æ–≤—ñ —Å–ª–æ–≤–∞", "üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏")
    else:
        # –î–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É —Ä–µ–∂–∏–º—ñ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞ –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è
        keyboard.add("üìñ –í—á–∏—Ç–∏ –Ω–æ–≤—ñ —Å–ª–æ–≤–∞", "üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏")
    
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫—ñ–≤
    keyboard.add("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫", "üë• –°–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫")
    
    return keyboard

def main_menu_cancel():
    """Create cancel menu keyboard"""
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("–í—ñ–¥–º—ñ–Ω–∞")
    return keyboard

def language_selection_keyboard():
    """Create language selection keyboard"""
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", "üá∑üá∫ –†–æ—Å—ñ–π—Å—å–∫–∞")
    return keyboard
