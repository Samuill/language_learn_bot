# -*- coding: utf-8 -*-

"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ç–∞ –±–∞–∑–æ–≤–æ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.
"""

import db_manager
from config import bot, user_state
from utils import clear_state, track_activity, main_menu_keyboard
from utils.language_utils import get_text
from utils.state_helpers import save_message_id
from handlers.start import show_language_selection
from utils.console_logger import log_menu_transition, log_displayed_buttons, MENU_MAIN

@bot.message_handler(commands=["start"])
def main_menu(message):
    """Show main menu or language selection"""
    chat_id = message.chat.id
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –º–æ–≤–∞ –≤ –ë–î
    language = db_manager.get_user_language(chat_id)
    track_activity(chat_id)
    
    if not language:
        # –Ø–∫—â–æ –º–æ–≤–∏ –Ω–µ–º–∞—î, –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –æ–±—Ä–∞—Ç–∏ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
        show_language_selection(chat_id)
        user_state[chat_id] = {"state": "language_selection"}
    else:
        # –ú–æ–≤–∞ –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ - –ø–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        clear_state(chat_id)
        
        # Get dictionary info
        dict_type, shared_dict_id, _ = db_manager.get_user_dictionary_info(chat_id)
        
        user_state[chat_id] = {
            "language": language,
            "dict_type": dict_type,
            "level": "easy",  # Default level
            "current_menu": "main"
        }
        
        if shared_dict_id:
            user_state[chat_id]["shared_dict_id"] = shared_dict_id
            
        log_menu_transition(chat_id, "UNKNOWN", MENU_MAIN, "Command: /start")
        
        # Show current dictionary info in menu message
        menu_message = get_text("main_menu", chat_id)
        
        if dict_type == "shared" and shared_dict_id:
            # Get shared dictionary name
            conn = db_manager.get_connection()
            cursor = conn.cursor()
            cursor.execute("SELECT name FROM shared_dictionaries WHERE id = ?", (shared_dict_id,))
            result = cursor.fetchone()
            if result:
                dict_name = result[0]
                menu_message += f"\n\nüìö {get_text('current_dictionary', chat_id, '–ü–æ—Ç–æ—á–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫')}: {dict_name} ({get_text('shared_dictionary', chat_id)})"
            conn.close()
        else:
            menu_message += f"\n\nüìö {get_text('current_dictionary', chat_id, '–ü–æ—Ç–æ—á–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫')}: {get_text(f'{dict_type}_dictionary', chat_id)}"
        
        keyboard = main_menu_keyboard(chat_id)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏ –±–µ–∑ emoji
        button_texts = [button.text for row in keyboard.keyboard for button in row]
        log_displayed_buttons(chat_id, button_texts, MENU_MAIN)
        
        sent_message = bot.send_message(
            chat_id, 
            menu_message,
            reply_markup=keyboard
        )
        save_message_id(chat_id, sent_message.message_id)

@bot.message_handler(func=lambda message: message.text in ["‚úñÔ∏è –í—ñ–¥–º—ñ–Ω–∞", "–í—ñ–¥–º—ñ–Ω–∞"] or 
                                        message.text == get_text("cancel", message.chat.id))
def cancel_action(message):
    """Cancel current action and return to main menu"""
    chat_id = message.chat.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑-–∑–∞ –æ—Ç–º–µ–Ω—ã
    from_menu = user_state.get(chat_id, {}).get("current_menu", "UNKNOWN")
    log_menu_transition(chat_id, from_menu, MENU_MAIN, "Action: Cancel")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    clear_state(chat_id)
    user_state[chat_id]["current_menu"] = "main"
    
    keyboard = main_menu_keyboard(chat_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏
    button_texts = [button.text for row in keyboard.keyboard for button in row]
    log_displayed_buttons(chat_id, button_texts, MENU_MAIN)
    
    sent_message = bot.send_message(
        chat_id, 
        get_text("cancelled", chat_id), 
        reply_markup=keyboard
    )
    save_message_id(chat_id, sent_message.message_id)

@bot.message_handler(func=lambda message: message.text == "‚Ü©Ô∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é" or 
                                        message.text == get_text("back_to_main_menu", message.chat.id))
def return_to_main_menu(message):
    """Return to main menu"""
    chat_id = message.chat.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    from_menu = user_state.get(chat_id, {}).get("current_menu", "UNKNOWN")
    log_menu_transition(chat_id, from_menu, MENU_MAIN, "Action: Return to main menu")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è —Ç–∏–ø —Å–ª–æ–≤–∞—Ä—è
    clear_state(chat_id, preserve_dict_type=True, preserve_messages=False)
    
    # –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é
    if chat_id in user_state:
        user_state[chat_id]["current_menu"] = "main"
    else:
        user_state[chat_id] = {"current_menu": "main"}
    
    # Get dictionary info
    dict_type = user_state.get(chat_id, {}).get("dict_type", "personal")
    shared_dict_id = user_state.get(chat_id, {}).get("shared_dict_id")
    
    # Prepare menu message with dictionary info
    menu_message = get_text("main_menu", chat_id)
    
    if dict_type == "shared" and shared_dict_id:
        # Get shared dictionary name
        conn = db_manager.get_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM shared_dictionaries WHERE id = ?", (shared_dict_id,))
        result = cursor.fetchone()
        if result:
            dict_name = result[0]
            menu_message += f"\n\nüìö {get_text('current_dictionary', chat_id, '–ü–æ—Ç–æ—á–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫')}: {dict_name} ({get_text('shared_dictionary', chat_id)})"
        conn.close()
    else:
        menu_message += f"\n\nüìö {get_text('current_dictionary', chat_id, '–ü–æ—Ç–æ—á–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫')}: {get_text(f'{dict_type}_dictionary', chat_id)}"
    
    keyboard = main_menu_keyboard(chat_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏
    button_texts = [button.text for row in keyboard.keyboard for button in row]
    log_displayed_buttons(chat_id, button_texts, MENU_MAIN)
    
    sent_message = bot.send_message(
        chat_id, 
        menu_message,
        reply_markup=keyboard
    )
    save_message_id(chat_id, sent_message.message_id)
