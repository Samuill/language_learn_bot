# -*- coding: utf-8 -*-

"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å–ø—ñ–ª—å–Ω–∏–º–∏ —Å–ª–æ–≤–Ω–∏–∫–∞–º–∏.
"""

import telebot
from config import bot, user_state
from utils import main_menu_keyboard, main_menu_cancel, shared_dictionary_keyboard
from utils import clear_state
import db_manager

@bot.message_handler(func=lambda message: message.text.startswith("üë• –°–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫"))
def shared_dictionary_menu(message):
    """Show shared dictionary menu"""
    chat_id = message.chat.id
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
    conn = db_manager.get_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT shared_dict_id FROM users WHERE chat_id = ?", (chat_id,))
    result = cursor.fetchone()
    
    if result and result[0]:
        # –Ø–∫—â–æ –≤–∂–µ —î –≤–∏–±—Ä–∞–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫, –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω—å–æ–≥–æ
        shared_dict_id = result[0]
        
        # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if chat_id in user_state:
            user_state[chat_id].update({"dict_type": "shared", "shared_dict_id": shared_dict_id})
        else:
            user_state[chat_id] = {"dict_type": "shared", "shared_dict_id": shared_dict_id}
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–ª–æ–≤–Ω–∏–∫
        cursor.execute("SELECT name FROM shared_dictionaries WHERE id = ?", (shared_dict_id,))
        dict_info = cursor.fetchone()
        dict_name = dict_info[0] if dict_info else "–ù–µ–≤—ñ–¥–æ–º–∏–π —Å–ª–æ–≤–Ω–∏–∫"
        
        # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
        bot.send_message(
            chat_id,
            f"üìö –û–±—Ä–∞–Ω–æ —Å–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫: <b>{dict_name}</b>",
            parse_mode="HTML",
            reply_markup=main_menu_keyboard(chat_id)
        )
    else:
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è —Å–ø—ñ–ª—å–Ω–∏—Ö —Å–ª–æ–≤–Ω–∏–∫—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ —ñ—Å–Ω—É—é—Ç—å
        db_manager.create_shared_dictionary_tables()
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é —Å–ø—ñ–ª—å–Ω–∏—Ö —Å–ª–æ–≤–Ω–∏–∫—ñ–≤
        bot.send_message(chat_id, "üë• –°–ø—ñ–ª—å–Ω—ñ —Å–ª–æ–≤–Ω–∏–∫–∏ - –æ–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:",
                        reply_markup=shared_dictionary_keyboard())
        
        # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∏–ø —Å–ª–æ–≤–Ω–∏–∫–∞ —É —Å—Ç–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if chat_id in user_state:
            user_state[chat_id].update({"dict_type": "shared"})
        else:
            user_state[chat_id] = {"dict_type": "shared"}
    
    conn.close()

@bot.message_handler(func=lambda message: message.text == "üÜï –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫")
def create_shared_dictionary(message):
    """Create a new shared dictionary"""
    chat_id = message.chat.id
    clear_state(chat_id)
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_state[chat_id] = {
        "step": "creating_shared_dict",
    }
    
    bot.send_message(chat_id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –¥–ª—è —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞:",
                    reply_markup=main_menu_cancel())

@bot.message_handler(func=lambda message: user_state.get(message.chat.id, {}).get("step") == "creating_shared_dict")
def handle_shared_dict_name(message):
    """Handle shared dictionary name input"""
    chat_id = message.chat.id
    
    if message.text == "–í—ñ–¥–º—ñ–Ω–∞" or message.text == "‚úñÔ∏è –í—ñ–¥–º—ñ–Ω–∞":
        clear_state(chat_id)
        bot.send_message(chat_id, "üö´ –î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=main_menu_keyboard(chat_id))
        return
    
    dict_name = message.text.strip()
    
    if len(dict_name) < 3 or len(dict_name) > 30:
        bot.send_message(chat_id, "‚ùå –ù–∞–∑–≤–∞ —Å–ª–æ–≤–Ω–∏–∫–∞ –ø–æ–≤–∏–Ω–Ω–∞ –º—ñ—Å—Ç–∏—Ç–∏ –≤—ñ–¥ 3 –¥–æ 30 —Å–∏–º–≤–æ–ª—ñ–≤.")
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
    code, shared_dict_id = db_manager.create_shared_dictionary(chat_id, dict_name)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ –∫–æ–¥ –¥–æ—Å—Ç—É–ø—É
    bot.send_message(
        chat_id,
        f"‚úÖ –°–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫ '{dict_name}' —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!\n\n"
        f"–ö–æ–¥ –¥–æ—Å—Ç—É–ø—É: <code>{code}</code>\n\n"
        f"–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Ü–∏–º –∫–æ–¥–æ–º –∑ –¥—Ä—É–∑—è–º–∏, —â–æ–± –≤–æ–Ω–∏ –º–æ–≥–ª–∏ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≤–∞—à–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞.",
        parse_mode="HTML",
        reply_markup=main_menu_keyboard(chat_id)
    )
    
    clear_state(chat_id)

@bot.message_handler(func=lambda message: message.text == "üîë –í—Å—Ç—É–ø–∏—Ç–∏ –¥–æ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞")
def join_shared_dictionary(message):
    """Join an existing shared dictionary"""
    chat_id = message.chat.id
    clear_state(chat_id)
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_state[chat_id] = {
        "step": "joining_shared_dict",
    }
    
    bot.send_message(chat_id, "–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –¥–æ—Å—Ç—É–ø—É –¥–æ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞:",
                    reply_markup=main_menu_cancel())

@bot.message_handler(func=lambda message: user_state.get(message.chat.id, {}).get("step") == "joining_shared_dict")
def handle_shared_dict_code(message):
    """Handle shared dictionary code input"""
    chat_id = message.chat.id
    
    if message.text == "–í—ñ–¥–º—ñ–Ω–∞" or message.text == "‚úñÔ∏è –í—ñ–¥–º—ñ–Ω–∞":
        clear_state(chat_id)
        bot.send_message(chat_id, "üö´ –î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=main_menu_keyboard(chat_id))
        return
    
    code = message.text.strip().upper()
    
    if len(code) != 6:
        bot.send_message(chat_id, "‚ùå –ö–æ–¥ –¥–æ—Å—Ç—É–ø—É –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ 6 —Å–∏–º–≤–æ–ª—ñ–≤.")
        return
    
    # –ü—Ä–∏—î–¥–Ω—É—î–º–æ—Å—å –¥–æ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞
    success, result = db_manager.join_shared_dictionary(chat_id, code)
    
    if success:
        # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è
        bot.send_message(
            chat_id,
            f"‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏—î–¥–Ω–∞–ª–∏—Å—å –¥–æ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞ '{result}'!",
            reply_markup=main_menu_keyboard(chat_id)
        )
    else:
        # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        bot.send_message(chat_id, f"‚ùå {result}")
    
    clear_state(chat_id)

@bot.message_handler(func=lambda message: message.text == "üìã –ú–æ—ó —Å–ø—ñ–ª—å–Ω—ñ —Å–ª–æ–≤–Ω–∏–∫–∏")
def my_shared_dictionaries(message):
    """Show user's shared dictionaries"""
    chat_id = message.chat.id
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–ø—ñ–ª—å–Ω–∏—Ö —Å–ª–æ–≤–Ω–∏–∫—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    shared_dicts = db_manager.get_user_shared_dictionaries(chat_id)
    
    if not shared_dicts:
        bot.send_message(
            chat_id,
            "üì≠ –í–∏ –Ω–µ —î —É—á–∞—Å–Ω–∏–∫–æ–º –∂–æ–¥–Ω–æ–≥–æ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞.",
            reply_markup=shared_dictionary_keyboard()
        )
        return
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–Ω–∏–∫—ñ–≤
    response = "üìã –í–∞—à—ñ —Å–ø—ñ–ª—å–Ω—ñ —Å–ª–æ–≤–Ω–∏–∫–∏:\n\n"
    
    for dict_info in shared_dicts:
        admin_status = "üëë –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä" if dict_info['is_admin'] else "üë§ –£—á–∞—Å–Ω–∏–∫"
        response += f"‚Ä¢ <b>{dict_info['name']}</b> ({admin_status})\n"
        response += f"  –ö–æ–¥ –¥–æ—Å—Ç—É–ø—É: <code>{dict_info['code']}</code>\n\n"
    
    response += "–û–±–µ—Ä—ñ—Ç—å —Å–ª–æ–≤–Ω–∏–∫, —è–∫–∏–π –±–∞–∂–∞—î—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:"
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É —Å–ª–æ–≤–Ω–∏–∫–∞
    markup = telebot.types.InlineKeyboardMarkup()
    
    for dict_info in shared_dicts:
        admin_icon = "üëë" if dict_info['is_admin'] else "üë§"
        button_text = f"{admin_icon} {dict_info['name']}"
        markup.add(telebot.types.InlineKeyboardButton(
            button_text, 
            callback_data=f"use_shared_dict_{dict_info['id']}"
        ))
    
    bot.send_message(
        chat_id,
        response,
        parse_mode="HTML",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith("use_shared_dict_"))
def use_shared_dictionary(call):
    """Switch to a specific shared dictionary"""
    chat_id = call.message.chat.id
    shared_dict_id = int(call.data.replace("use_shared_dict_", ""))
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    import db_manager
    conn = db_manager.get_connection()
    cursor = conn.cursor()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ü—å–æ–≥–æ —Å–ª–æ–≤–Ω–∏–∫–∞
    cursor.execute('SELECT created_by FROM shared_dictionaries WHERE id = ?', (shared_dict_id,))
    creator_result = cursor.fetchone()
    is_admin = creator_result and creator_result[0] == chat_id
    
    # –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ø–∏—Å —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    if is_admin:
        cursor.execute('UPDATE users SET shared_dict_id = ?, shared_dict_admin = 1 WHERE chat_id = ?', 
                     (shared_dict_id, chat_id))
    else:
        cursor.execute('UPDATE users SET shared_dict_id = ? WHERE chat_id = ?', 
                     (shared_dict_id, chat_id))
    
    conn.commit()
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤—É —Å–ª–æ–≤–Ω–∏–∫–∞
    cursor.execute('SELECT name FROM shared_dictionaries WHERE id = ?', (shared_dict_id,))
    dict_name = cursor.fetchone()[0]
    conn.close()
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∞–∂–ª–∏–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    level = user_state.get(chat_id, {}).get("level", "easy")
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≤ –ø–∞–º'—è—Ç—ñ –ü–û–í–ù–Ü–°–¢–Æ, –Ω–µ –≤—Ç—Ä–∞—á–∞—é—á–∏ –≤–∞–∂–ª–∏–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    user_state[chat_id] = {
        "dict_type": "shared", 
        "shared_dict_id": shared_dict_id,
        "level": level
    }
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    bot.answer_callback_query(call.id, f"–û–±—Ä–∞–Ω–æ —Å–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫: {dict_name}")
    bot.delete_message(chat_id, call.message.message_id)
    
    admin_text = " (–≤–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä)" if is_admin else ""
    
    bot.send_message(
        chat_id,
        f"üìö –û–±—Ä–∞–Ω–æ —Å–ø—ñ–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫: <b>{dict_name}</b>{admin_text}\n"
        f"–¢–µ–ø–µ—Ä –≤—Å—ñ –¥—ñ—ó –±—É–¥—É—Ç—å –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å —É —Ü—å–æ–º—É —Å–ª–æ–≤–Ω–∏–∫—É.",
        parse_mode="HTML",
        reply_markup=main_menu_keyboard(chat_id)
    )
